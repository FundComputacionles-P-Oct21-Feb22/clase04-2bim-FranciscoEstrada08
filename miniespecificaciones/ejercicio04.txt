1.  Inicio
2.  funcion principal()
3.      tabla, i[0-n]
4.      valorLimite, i[0-n]
5.      cont, i[1-n]
6.      valorLimite <-- 10
7.      Para (cont <-- 1; cont <=10; cont++)
8.        obtenerTabla(cont, valorLimite) // (1, 10)
                                          // (2, 10)
					  // (3, 10)
		  			  // (4, 10)
9.      FinPara
10.  fin funcion principal 
11. // se define un método o función
12.  funcion obtenerTabla(tabla, i; limite, i)  // tabla:1 limite:10 // tabla:2 limite: 10
13.     contador, i[0-n] <-- 1
14.     operacion, i[0-n]
15.     mensaje, x(200)[{a-b}, {BS}, {*, =}] <-- ""
16.     Mientras(contador<=limite) entonces // 1<=10 // 2<=10 // 3<=10 //4 <= 10 // 5<=10 // 6 <= 10 // 7<=10 //8 <= 10 // 9<=10 // 10 <= 10
					    // 1<=10 // 2<=10 // 3<=10 //4 <= 10 // 5<=10 // 6 <= 10 // 7<=10 //8 <= 10 // 9<=10 // 10 <= 10	
17.       operacion <-- tabla * contador // 1*1 // 1
                                         // 1*2 // 2
                                         // 1*3 // 3
					 // 1*4 // 4
					 // 1*5 // 5
					 // 1*6 // 6
					 // 1*7 // 7
					 // 1*8 // 8
					 // 1*9 // 9
					 // 1*10 // 10
-------------------------------------------------------------------------------------------------
					 // 2*1 // 2
                                         // 2*2 // 4
                                         // 2*3 // 6
					 // 2*4 // 8
					 // 2*5 // 10
					 // 2*6 // 12
					 // 2*7 // 14
					 // 2*8 // 16
					 // 2*9 // 18
					 // 2*10 // 20
18.       mensaje <-- mensaje + tabla + " * " + contador " = " + operacion "\n"
                      "" + 1 * 1 = 1 "\n"
                      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" 
                      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n"
		      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n"
	              1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n" + 1 * 5 = 5 "\n"
		      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n" + 1 * 5 = 5 "\n" + 1 * 6 = 6 "\n"
		      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n" + 1 * 5 = 5 "\n" + 1 * 6 = 6 "\n" + 1 * 7 = 7 "\n"
		      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n" + 1 * 5 = 5 "\n" + 1 * 6 = 6 "\n" + 1 * 7 = 7 "\n" + 1 *8 = 8 "\n"
		      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n" + 1 * 5 = 5 "\n" + 1 * 6 = 6 "\n" + 1 * 7 = 7 "\n" + 1 *8 = 8 "\n" + 1* 9 = 9 "\n"
		      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n" + 1 * 5 = 5 "\n" + 1 * 6 = 6 "\n" + 1 * 7 = 7 "\n" + 1 *8 = 8 "\n" + 1* 9 = 9 "\n" + 1 * 10 = 10 "\n"	
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		      "" + 1 * 1 = 1 "\n"
                      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" 
                      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n"
		      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n"
	              1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n" + 1 * 5 = 5 "\n"
		      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n" + 1 * 5 = 5 "\n" + 1 * 6 = 6 "\n"
		      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n" + 1 * 5 = 5 "\n" + 1 * 6 = 6 "\n" + 1 * 7 = 7 "\n"
		      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n" + 1 * 5 = 5 "\n" + 1 * 6 = 6 "\n" + 1 * 7 = 7 "\n" + 1 *8 = 8 "\n"
		      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n" + 1 * 5 = 5 "\n" + 1 * 6 = 6 "\n" + 1 * 7 = 7 "\n" + 1 *8 = 8 "\n" + 1* 9 = 9 "\n"
		      1 * 1 = 1 "\n" + 1 * 2 = 2 "\n" + 1 * 3 = 3 "\n" + 1 * 4 = 4 "\n" + 1 * 5 = 5 "\n" + 1 * 6 = 6 "\n" + 1 * 7 = 7 "\n" + 1 *8 = 8 "\n" + 1* 9 = 9 "\n" + 1 * 10 = 10 "\n"		 
19.       contador <-- contador + 1 // 2 // 3 // 4 // 5 //6 // 7 // 8 // 9 // 10
				+ 1 // 2 // 3 // 4 // 5 //6 // 7 // 8 // 9 // 10
20.     Fin Mientras
21.     Escribir mensaje
22.  fin funcion obtenerTabla
23. Fin